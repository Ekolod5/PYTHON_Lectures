# Функция map
# Функция map() применяет указанную функцию к каждому элементу 
# итерируемого объекта и возвращает итератор с новыми объектами.

list_1 = [x for x in range (1,20)]
print(list_1)
# [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]

list_1 = list(map(lambda x: x + 10, list_1 ))
print(list_1)
# [11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29]


# Задача: C клавиатуры вводится некий набор чисел, в качестве разделителя 
# используется пробел. Этот набор чисел будет считан в качестве строки. 
# Как превратить list строк в list чисел?

# 1. Маленькое отступление, функция строка.split() - 
# убирает все пробелы и создаем список из значений строки, пример:
data = '15 156 96 3 5 8 52 5'
print(data)             # 15 156 96 3 5 8 52 5

data = data.split()
print(data)             # ['15', '156', '96', '3', '5', '8', '52', '5']

# 2. Теперь вернемся к задаче с помощью функции map(): 
data = '15 156 96 3 5 8 52 5'
data = list(map(int, data.split()))
print(data)           # [15, 156, 96, 3, 5, 8, 52, 5]


# Решим задачу с map. В списке хранятся числа. Нужно выбрать только чётные числа и 
# составить список пар (число; квадрат числа).
# Пример: 1 2 3 5 8 15 23 38 
# Получить: [(2, 4), (8, 64), (38, 1444)]
# Сделаем из функции select - map

def where(f, col):
    return [x for x in col if f(x)]

data = [1, 2, 3, 5, 8, 15, 23, 38]
res = map(int, data)                   
print(res)
res = where(lambda x: x % 2 == 0, res)
print(res)                                # [2, 8, 38]
res = list(map(lambda x: (x, x**2), res))
print(res)                                # [(2, 4), (8, 64), (38, 1444)]
